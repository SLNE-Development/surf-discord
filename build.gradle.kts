/*
 * This file was generated by the Gradle 'init' task.
 */

plugins {
    `java-library`
    `maven-publish`
    `kotlin-dsl`

    id("org.hibernate.build.maven-repo-auth") version "3.0.4"
    id("com.github.johnrengelman.shadow") version "8.1.1"
    id("io.freefair.lombok") version "8.6"
}

repositories {
    gradlePluginPortal()

    maven("https://repo.slne.dev/repository/maven-public/") { name = "maven-public" }
}

configurations.all {
    resolutionStrategy {
        cacheChangingModulesFor(0, "seconds")
    }
}

dependencies {
    api(libs.fastutil)
    api(libs.configurate.yaml)
    api(libs.configurate.jackson)
    api(libs.dev.slne.surf.surf.api.core.api)
    api(libs.net.dv8tion.jda) {
        isChanging = true
        exclude(group = "org.slf4j", module = "slf4j-api")
        exclude(group = "ch.qos.logback", module = "logback-classic")
        exclude(group = "ch.qos.logback", module = "logback-core")
    }
    api(libs.dev.slne.surf.data.core) {
        exclude(group = "org.slf4j", module = "slf4j-api")
        exclude(group = "ch.qos.logback", module = "logback-classic")
        exclude(group = "ch.qos.logback", module = "logback-core")
    }
}

group = "dev.slne"
version = "3.0.0-SNAPSHOT"
description = "surf-discord"

java {
    withJavadocJar()
    withSourcesJar()

    sourceCompatibility = JavaVersion.VERSION_17
}

publishing {
    repositories {
        maven("https://repo.slne.dev/repository/maven-snapshots/") { name = "maven-snapshots" }
    }

    publications.create<MavenPublication>("maven") {
        from(components["java"])
    }
}

tasks {
    compileJava {
        options.encoding = Charsets.UTF_8.name()
        options.compilerArgs.add("-parameters")
    }
    javadoc {
        options.encoding = Charsets.UTF_8.name()
    }

    jar {
        manifest {
            attributes["Main-Class"] = "dev.slne.discord.Launcher"
        }
    }

    shadowJar {
        archiveFileName.set("bot.jar")
        manifest {
            attributes["Main-Class"] = "dev.slne.discord.Launcher"
        }
    }
}

tasks.named<Jar>("jar") {
    archiveFileName.set("bot.jar")
}

tasks.withType<Zip> {
    isZip64 = true
}